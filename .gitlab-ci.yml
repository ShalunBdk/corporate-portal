image: docker:latest

stages:
  - test
  - build
  - deploy

variables:
  # Docker Hub credentials (Храните эти переменные в настройках GitLab CI/CD)
  DOCKER_HUB_USER: "$DOCKER_HUB_USER"
  DOCKER_HUB_PASSWORD: "$DOCKER_HUB_PASSWORD"

  # Application environment variables (Храните чувствительные данные в GitLab CI/CD Variables)
  AD_SERVER: "$AD_SERVER"
  AD_USER: "$AD_USER"
  AD_PASSWORD: "$AD_PASSWORD"
  AD_BASE_DN: "$AD_BASE_DN"

services:
  - name: docker:latest
    command: ["-H", "unix:///var/run/docker.sock"]

test:
  stage: test
  image: python:3
  tags:
    - test-runner
  script:
    - cp $ENV_FILE .env
    - pip install -r requirements.txt
    - python shalin-portal/test_app.py

build:
  stage: build
  tags:
    - test-runner
  script:
    # Логин в Docker Hub
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    # Сборка Docker-образа
    - docker build -t shalunbdk/shalin-portal:latest -f shalin-portal/Dockerfile .
    # Тегирование и пуш образа в Docker Hub
    - docker push shalunbdk/shalin-portal:latest

deploy:
  stage: deploy
  tags:
    - test-runner
  script:
    - cp $ENV_FILE .env
    # Логин в Docker Hub для загрузки образа
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    # Запуск Docker Compose с уже загруженным образом
    - docker-compose -f docker-compose.yml up -d
  only:
    - main  # Выполнять деплой только для ветки main
  environment:
    name: production
